/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package screenscreen;

import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.rmi.server.UID;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author kaushik
 */
public class new1 extends javax.swing.JFrame {

    /**
     * Creates new form new1
     */
    public new1() throws SQLException {
        initComponents();
       
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ghb = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        cpassword = new javax.swing.JPasswordField();
        designationu = new javax.swing.JComboBox<>();
        lbl_username = new javax.swing.JLabel();
        lbl_password = new javax.swing.JLabel();
        Username = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Name = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        availability = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        department = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Name56 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        dob = new com.toedter.calendar.JDateChooser();
        jButton3 = new javax.swing.JButton();
        lbl_designation = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.white);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(java.awt.Color.white);
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(74, 217, 126)));

        ghb.setIcon(new javax.swing.ImageIcon("F:\\netbeans Projects\\icons\\Account1.jpg")); // NOI18N

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setForeground(new java.awt.Color(255, 0, 0));

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Password:");

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Confirm Password:");

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Username:");

        password.setBackground(new java.awt.Color(255, 255, 255));
        password.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });
        password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordKeyReleased(evt);
            }
        });

        cpassword.setBackground(new java.awt.Color(255, 255, 255));
        cpassword.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N

        designationu.setBackground(new java.awt.Color(255, 255, 255));
        designationu.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        designationu.setForeground(new java.awt.Color(0, 0, 0));
        designationu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT YOUR DESIGNATION", "=================================", "=================================", "PRINCIPAL", "HEAD OF THE DEPARTMENT", "TEACHER/FACULTY", "LAB ASSISTANT", "REGISTER", "PRINCIPAL OFFICE(NOT PRINCIPAL)", "ANTI-RAGGING DEPARTMENT", "TECH-FEST AUTHORITY", "SPORTS COMMITEE", "FRESHERS COMMITEE", "STUDENT" }));
        designationu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        designationu.setName("designationu"); // NOI18N
        designationu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                designationuMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                designationuMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                designationuMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                designationuMouseReleased(evt);
            }
        });
        designationu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                designationuActionPerformed(evt);
            }
        });

        lbl_username.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        lbl_username.setForeground(new java.awt.Color(255, 0, 0));

        lbl_password.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        lbl_password.setForeground(new java.awt.Color(255, 0, 0));

        Username.setBackground(new java.awt.Color(255, 255, 255));
        Username.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        Username.setForeground(new java.awt.Color(0, 0, 0));
        Username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                UsernameKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Name:");

        Name.setBackground(new java.awt.Color(255, 255, 255));
        Name.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                NameKeyReleased(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Check");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        availability.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Designation");

        department.setBackground(new java.awt.Color(255, 255, 255));
        department.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        department.setForeground(new java.awt.Color(0, 0, 0));
        department.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT YOUR DEPARTMENT", "=================================", "COMPUTER SCIENCE ENGINEERING DEPARTMENT", "ELECTRONICS SCIENCE ENGINEERING DEPARTMENT", "CIVIL ENGINEERING DEPARTMENT", "MECHANICAL ENGINEERING DEPARTMENT", "ELECTRICAL DEPARTMENT" }));
        department.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        department.setEnabled(false);
        department.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                departmentMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                departmentMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                departmentMouseReleased(evt);
            }
        });
        department.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Department:");

        jLabel9.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("ID:");

        Name56.setEditable(false);
        Name56.setBackground(new java.awt.Color(255, 255, 255));
        Name56.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        Name56.setForeground(new java.awt.Color(0, 0, 0));
        Name56.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Name56KeyReleased(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 255, 0));
        jButton5.setForeground(new java.awt.Color(51, 51, 51));
        jButton5.setText("Generate ID");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setText("DATE OF BIRTH:");

        dob.setBackground(new java.awt.Color(255, 255, 255));
        dob.setForeground(new java.awt.Color(0, 0, 0));
        dob.setDateFormatString("dd-MM- yyyy");
        dob.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8))
                            .addGap(129, 129, 129))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23))
                        .addGap(150, 150, 150)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lbl_username, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(availability, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(Name56)
                                .addGap(48, 48, 48)
                                .addComponent(jButton5))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(designationu, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(department, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(Username, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                                        .addComponent(password, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Name))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(lbl_password, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(40, 40, 40))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(designationu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_username, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(availability, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_password, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(department, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Name56, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(51, 51, 51));
        jButton3.setText("Sign Up");
        jButton3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 51, 0), 3, true));
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton3MouseExited(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        lbl_designation.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        jButton6.setText("Upload Picture");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ghb, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6))
                        .addGap(38, 38, 38)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(387, 387, 387)
                        .addComponent(lbl_designation, javax.swing.GroupLayout.PREFERRED_SIZE, 796, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(ghb, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(lbl_designation, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(55, 200, 46));
        jPanel2.setForeground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Rachana", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(254, 254, 254));
        jLabel1.setText("Sign Up Page");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(35, 65, 201), 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(525, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(482, 482, 482))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon("F:\\netbeans Projects\\icons\\red-cross.png")); // NOI18N
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon("F:\\netbeans Projects\\icons\\minimize1.png")); // NOI18N
        jButton2.setBorder(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
public void lll() throws ClassNotFoundException, SQLException
{
    
    if(designationu.getSelectedItem().equals("PRINCIPAL"))
    {
        String a= "PP";
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root","");
        Statement pst = con.createStatement();
        ResultSet rs = pst.executeQuery("SELECT Max(UID) From logindatabase ");
        rs.next();
        rs.getString("Max(UID)");
        if(rs.getString("Max(UID)")== null)
        {
            Name56.setText("CG349PP1011000");
        }
        else
        {
            String r1 = rs.getString("Max(UID)");
            int ln = r1.length();
            String stext = r1.substring(0,5);
            String snum = r1.substring(8,ln);
            int n = Integer.parseInt(snum);
            n++;
            String l = Integer.toString(n);
            String roll = stext +a+l ;
            Name56.setText(roll);
        }
    }
   else if(designationu.getSelectedItem().equals("HEAD OF THE DEPARTMENT"))
    {
        String b= "HOD";
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root","");
        Statement pst = con.createStatement();
        ResultSet rs = pst.executeQuery("SELECT Max(UID) From logindatabase ");
        rs.next();
        rs.getString("Max(UID)");
        if(rs.getString("Max(UID)")== null)
        {
            Name56.setText("CG349HOD1011000");
        }
        else
        {
            String r1 = rs.getString("Max(UID)");
            int ln = r1.length();
            String stext = r1.substring(0,5);
            String snum = r1.substring(8,ln);
            int n = Integer.parseInt(snum);
            n++;
            String l = Integer.toString(n);
            String roll = stext +b+l ;
            Name56.setText(roll);
        }
    }
     else if(designationu.getSelectedItem().equals("TEACHER/FACULTY"))
    {
        String b= "TFC";
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root","");
        Statement pst = con.createStatement();
        ResultSet rs = pst.executeQuery("SELECT Max(UID) From logindatabase ");
        rs.next();
        rs.getString("Max(UID)");
        if(rs.getString("Max(UID)")== null)
        {
            Name56.setText("CG349TFC1011000");
        }
        else
        {
            String r1 = rs.getString("Max(UID)");
            int ln = r1.length();
            String stext = r1.substring(0,5);
            String snum = r1.substring(8,ln);
            int n = Integer.parseInt(snum);
            n++;
            String l = Integer.toString(n);
            String roll = stext +b+l ;
            Name56.setText(roll);
        }
    }
     else if(designationu.getSelectedItem().equals("LAB ASSISTANT"))
    {
        String b= "LAB";
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root","");
        Statement pst = con.createStatement();
        ResultSet rs = pst.executeQuery("SELECT Max(UID) From logindatabase ");
        rs.next();
        rs.getString("Max(UID)");
        if(rs.getString("Max(UID)")== null)
        {
            Name56.setText("CG349LAB1011000");
        }
        else
        {
            String r1 = rs.getString("Max(UID)");
            int ln = r1.length();
            String stext = r1.substring(0,5);
            String snum = r1.substring(8,ln);
            int n = Integer.parseInt(snum);
            n++;
            String l = Integer.toString(n);
            String roll = stext +b+l ;
            Name56.setText(roll);
        }
    }
      else if(designationu.getSelectedItem().equals("REGISTER"))
    {
        String b= "REG";
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root","");
        Statement pst = con.createStatement();
        ResultSet rs = pst.executeQuery("SELECT Max(UID) From logindatabase ");
        rs.next();
        rs.getString("Max(UID)");
        if(rs.getString("Max(UID)")== null)
        {
            Name56.setText("CG349REG1011000");
        }
        else
        {
            String r1 = rs.getString("Max(UID)");
            int ln = r1.length();
            String stext = r1.substring(0,5);
            String snum = r1.substring(8,ln);
            int n = Integer.parseInt(snum);
            n++;
            String l = Integer.toString(n);
            String roll = stext +b+l ;
            Name56.setText(roll);
        }
    }
     else if(designationu.getSelectedItem().equals("PRINCIPAL OFFICE(NOT PRINCIPAL"))
    {
        String b= "RO";
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root","");
        Statement pst = con.createStatement();
        ResultSet rs = pst.executeQuery("SELECT Max(UID) From logindatabase");
        rs.next();
        rs.getString("Max(UID)");
        if(rs.getString("Max(UID)")== null)
        {
            Name56.setText("CG349PO1011000");
        }
        else
        {
            String r1 = rs.getString("Max(UID)");
            int ln = r1.length();
            String stext = r1.substring(0,5);
            String snum = r1.substring(8,ln);
            int n = Integer.parseInt(snum);
            n++;
            String l = Integer.toString(n);
            String roll = stext +b+l ;
            Name56.setText(roll);
        }
    }
    else if(designationu.getSelectedItem().equals("ANTI-RAGGING DEPARTMENT"))
    {
        String b= "ARC";
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root","");
        Statement pst = con.createStatement();
        ResultSet rs = pst.executeQuery("SELECT Max(UID) From logindatabase ");
        rs.next();
        rs.getString("Max(UID)");
        if(rs.getString("Max(UID)")== null)
        {
            Name56.setText("CG349ARC1011000");
        }
        else
        {
            String r1 = rs.getString("Max(UID)");
            int ln = r1.length();
            String stext = r1.substring(0,5);
            String snum = r1.substring(8,ln);
            int n = Integer.parseInt(snum);
            n++;
            String l = Integer.toString(n);
            String roll = stext +b+l ;
            Name56.setText(roll);
        }
    }
       else if(designationu.getSelectedItem().equals("TECH-FEST AUTHORITY"))
    {
        String b= "TFA";
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root","");
        Statement pst = con.createStatement();
        ResultSet rs = pst.executeQuery("SELECT Max(UID) From logindatabase ");
        rs.next();
        rs.getString("Max(UID)");
        if(rs.getString("Max(UID)")== null)
        {
            Name56.setText("CG349TFA1011000");
        }
        else
        {
            String r1 = rs.getString("Max(UID)");
            int ln = r1.length();
            String stext = r1.substring(0,5);
            String snum = r1.substring(8,ln);
            int n = Integer.parseInt(snum);
            n++;
            String l = Integer.toString(n);
            String roll = stext +b+l ;
            Name56.setText(roll);
        }
    }
     else if(designationu.getSelectedItem().equals("SPORTS COMMITEE"))
    {
        String b= "SC";
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root","");
        Statement pst = con.createStatement();
        ResultSet rs = pst.executeQuery("SELECT Max(UID) From logindatabase ");
        rs.next();
        rs.getString("Max(UID)");
        if(rs.getString("Max(UID)")== null)
        {
            Name56.setText("CG349SC1011000");
        }
        else
        {
            String r1 = rs.getString("Max(UID)");
            int ln = r1.length();
            String stext = r1.substring(0,5);
            String snum = r1.substring(8,ln);
            int n = Integer.parseInt(snum);
            n++;
            String l = Integer.toString(n);
            String roll = stext +b+l ;
            Name56.setText(roll);
        }
    }
    else if(designationu.getSelectedItem().equals("FRESHERS COMMITEE"))
    {
        String b= "FC";
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root","");
        Statement pst = con.createStatement();
        ResultSet rs = pst.executeQuery("SELECT Max(UID) From logindatabase ");
        rs.next();
        rs.getString("Max(UID)");
        if(rs.getString("Max(UID)")== null)
        {
            Name56.setText("CG349FC1011000");
        }
        else
        {
            String r1 = rs.getString("Max(UID)");
            int ln = r1.length();
            String stext = r1.substring(0,5);
            String snum = r1.substring(8,ln);
            int n = Integer.parseInt(snum);
            n++;
            String l = Integer.toString(n);
            String roll = stext +b+l ;
            Name56.setText(roll);
        }
    }
    
}
    
    
    public void autoID(){
    if(designationu.getSelectedItem().equals("STUDENT")){  
    String a ="CSE" ;
  if(department.getSelectedItem().equals("COMPUTER SCIENCE ENGINEERING DEPARTMENT"))
    try{
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root","");
        Statement pst = con.createStatement();
        ResultSet rs = pst.executeQuery("SELECT Max(UID) From studentdata ");
        rs.next();
        rs.getString("Max(UID)");
        if(rs.getString("Max(UID)")== null)
        {
            Name56.setText("CG349CSE5011000");
        }
        else
        {
            String r1 = rs.getString("Max(UID)");
            int ln = r1.length();
            String stext = r1.substring(0,5);
            String snum = r1.substring(8,ln);
            int n = Integer.parseInt(snum);
            n++;
            String l = Integer.toString(n);
            String roll = stext +a+l ;
            Name56.setText(roll);
        }
    }catch(Exception e)
    {
        JOptionPane.showMessageDialog(null, e);
    }
  else if(department.getSelectedItem().equals("ELECTRONICS SCIENCE ENGINEERING DEPARTMENT"))
  {
      String b = "ECE";
      try{
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root","");
        Statement pst = con.createStatement();
        ResultSet rs = pst.executeQuery("SELECT Max(UID) From studentdata ");
        rs.next();
        String r1=rs.getString("Max(UID)");
        int ln = r1.length();
            String stext = r1.substring(0,5);
            String snum = r1.substring(8,ln);
            int n = Integer.parseInt(snum);
        if(rs.getString("Max(UID)")== null)
        {
            
            Name56.setText("CG349ECE5041000");
        }
        else
        {
            n++;
            String l = Integer.toString(n);
            String roll = stext+b+l ;
            Name56.setText(roll);
        }
    }catch(Exception e)
    {
        JOptionPane.showMessageDialog(null, e);
    }
  }
  else if(department.getSelectedItem().equals("CIVIL ENGINEERING DEPARTMENT"))
  {
      String b = "CIV";
      try{
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root","");
        Statement pst = con.createStatement();
        ResultSet rs = pst.executeQuery("SELECT Max(UID) From studentdata ");
        
        rs.next();
        String r1=rs.getString("Max(UID)");
        int ln = r1.length();
            String stext = r1.substring(0,5);
            String snum = r1.substring(8,ln);
            int n = Integer.parseInt(snum);
        if(rs.getString("Max(UID)")== null)
        {
            
            Name56.setText("CG349CIV5241000");
        }
        else
        {
            n++;
            String l = Integer.toString(n);
            String roll = stext+b+l ;
            Name56.setText(roll);
        }
    }catch(Exception e)
    {
        JOptionPane.showMessageDialog(null, e);
    }
  }
  else if(department.getSelectedItem().equals("MECHANICAL ENGINEERING DEPARTMENT"))
  {
      String b = "MEC";
      try{
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root","");
        Statement pst = con.createStatement();
        ResultSet rs = pst.executeQuery("SELECT Max(UID) From studentdata ");
        
        rs.next();
        String r1=rs.getString("Max(UID)");
        int ln = r1.length();
            String stext = r1.substring(0,5);
            String snum = r1.substring(8,ln);
            int n = Integer.parseInt(snum);
        if(rs.getString("Max(UID)")== null)
        {
            
            Name56.setText("CG349MEC511000");
        }
        else
        {
            n++;
            String l = Integer.toString(n);
            String roll = stext+b+l ;
            Name56.setText(roll);
        }
    }catch(Exception e)
    {
        JOptionPane.showMessageDialog(null, e);
    }
  }
  else if(department.getSelectedItem().equals("ELECTRICAL DEPARTMENT"))
  {
      String b = "ELE";
      try{
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root","");
        Statement pst = con.createStatement();
        ResultSet rs = pst.executeQuery("SELECT Max(UID) From studentdata ");
        
        rs.next();
        String r1=rs.getString("Max(UID)");
        int ln = r1.length();
            String stext = r1.substring(0,5);
            String snum = r1.substring(8,ln);
            int n = Integer.parseInt(snum);
        if(rs.getString("Max(UID)")== null)
        {
            
            Name56.setText("CG349ELE511000");
        }
        else
        {
            n++;
            String l = Integer.toString(n);
            String roll = stext+b+l ;
            Name56.setText(roll);
        }
    }catch(Exception e)
    {
        JOptionPane.showMessageDialog(null, e);
    }
  }
    
    
}
  
  
  
}
    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordActionPerformed
start Start = new start();
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    if(designationu.getSelectedItem().equals("================================="))
    {
        lbl_designation.setText("Please Select Your Designation");
        lbl_designation.setForeground(Color.red);
    }
    else if(designationu.getSelectedItem().equals("SELECT YOUR DESIGNATION"))
    {
        lbl_designation.setText("Please Select Your Designation");
        lbl_designation.setForeground(Color.red);
    }
    else if(designationu.getSelectedItem().equals(""))
    {
        lbl_designation.setText("Please Select Your Designation");
        lbl_designation.setForeground(Color.red);
    }
    else if(designationu.getSelectedItem().equals("STUDENT"))
            {
               if(Username.getText().trim().isEmpty() && password.getText().trim().isEmpty())
    {
        lbl_username.setText("Username is Empty");
        lbl_password.setText("Password is Empty");
    }
    else if(Username.getText().trim().isEmpty())
    {
          lbl_username.setText("Username is Empty");
    }
    else if( password.getText().trim().isEmpty())
    {
          lbl_password.setText("Password is Empty");
    }
    else if(department.getSelectedItem().equals("SELECT YOUR DEPARTMENT")){
        lbl_designation.setText("Please Select Your Department");
         lbl_designation.setForeground(Color.red);
    }
    else if(department.getSelectedItem().equals("================================="))
            {
                lbl_designation.setText("Please Select Your Department");
                 lbl_designation.setForeground(Color.red);
            }
    else if(password.getText().equals(cpassword.getText())) {
        
        try
        {
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MMMM-YYYY");
       String f= sdf.format(dob.getDate());
        FileInputStream ib = new FileInputStream(new File(d));
           String query = "INSERT INTO `studentdata`( `name`,`username`, `password`,`dpt`,`UID`,`DOB`,`pic`) VALUES (?,?,?,?,?,?,?)" ;
         Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root","");
         PreparedStatement pst = con.prepareStatement(query);
           pst.setString(1,Name.getText());
           pst.setString(2,Username.getText());
           pst.setString(3, password.getText());
           pst.setString(4, (String) department.getSelectedItem());
            pst.setString(5, Name56.getText());
            pst.setString(6, f);
            pst.setBlob(7, ib);
            
            
          
           pst.executeUpdate();
           JOptionPane.showMessageDialog(null,"Registration Successfully");
           this.setVisible(false);
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }}else
    {
        JOptionPane.showMessageDialog(null, "Confirm Password is not MATCHING");
        password.setText("");
        cpassword.setText("");
    }
        }else
    
        if(Username.getText().trim().isEmpty() && password.getText().trim().isEmpty())
    {
        lbl_username.setText("Username is Empty");
        lbl_password.setText("Password is Empty");
    }
    else if(Username.getText().trim().isEmpty())
    {
          lbl_username.setText("Username is Empty");
    }
    else if( password.getText().trim().isEmpty())
    {
          lbl_password.setText("Password is Empty");
    }
    
    else if(password.getText().equals(cpassword.getText())) {
        try
        {
            InputStream ib = new FileInputStream(new File(d));
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MMMM-YYYY");
            String f= sdf.format(dob.getDate());
           String query = "INSERT INTO `logindatabase`( `name`,`username`, `password`,`Designation`,`UID`,`dpt`,`DOB`,`imagen`) VALUES (?,?,?,?,?,?,?,?)" ;
         Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root","");
         PreparedStatement pst = con.prepareStatement(query);
           pst.setString(1,Name.getText());
           pst.setString(2,Username.getText());
           pst.setString(3, password.getText());
           pst.setString(4, (String) designationu.getSelectedItem());
           pst.setString(5, Name56.getText());
           pst.setString(6, (String)department.getSelectedItem());
           pst.setString(7, f);
           pst.setBlob(8, ib);
           pst.executeUpdate();
           JOptionPane.showMessageDialog(null,"Registration Successfully");
           this.setVisible(false);
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }}else
    {
        JOptionPane.showMessageDialog(null, "Confirm Password is not MATCHING");
        password.setText("");
        cpassword.setText("");
    }
    }//GEN-LAST:event_jButton3ActionPerformed

      private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            // TODO add your handling code here:
            this.dispose();
      }//GEN-LAST:event_jButton1ActionPerformed

      private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
               this.setState(this.ICONIFIED);   
      }//GEN-LAST:event_jButton2ActionPerformed

      private void passwordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordKeyReleased
      
 String PATTERN  = "^[a-zA-Z0-9]{0,30}[@][a-zA_Z0-9]{0,10}$";
         Pattern pat = Pattern.compile(PATTERN);
         
         Matcher match = pat.matcher(password.getText());
         if(!match.matches())
         {
              lbl_password.setForeground(Color.RED);
             lbl_password.setText("Not Valid");
             cpassword.enable(false);
         }
         else
         {
             lbl_password.setForeground(Color.GREEN);
             lbl_password.setText("Valid");
             cpassword.enable(true);
         }            // TODO add your handling code here:
      }//GEN-LAST:event_passwordKeyReleased

    private void UsernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UsernameKeyReleased
        // TODO add your handling code here:
         String PATTERN  = "^[a-z0-9_-]{3,15}$";
         Pattern pat = Pattern.compile(PATTERN);
         
         Matcher match = pat.matcher(Username.getText());
         if(!match.matches())
         {
              lbl_username.setForeground(Color.RED);
             lbl_username.setText("Not Valid");
         }
         else
         {
             lbl_username.setForeground(Color.GREEN);
             lbl_username.setText("Valid");
         }

    }//GEN-LAST:event_UsernameKeyReleased

    private void designationuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_designationuActionPerformed
        // TODO add your handling code here:
    if(designationu.getSelectedItem().equals("STUDENT"))
    {
              lbl_designation.setText("YOU HAVE SELECTED STUDENT");
              lbl_designation.setForeground(Color.green);
              
              department.enable();
    }
    else if(designationu.getSelectedItem().equals("================================="))
    {
        lbl_designation.setText("Please Select Your Designation");
        lbl_designation.setForeground(Color.red);
    }
    else if(designationu.getSelectedItem().equals("SELECT YOUR DESIGNATION"))
    {
        lbl_designation.setText("Please Select Your Designation");
        lbl_designation.setForeground(Color.red);
    }
    else {
        
              lbl_designation.setText("YOU HAVE SELECTED"+" "+(String) designationu.getSelectedItem());
              lbl_designation.setForeground(Color.green);
              department.enable();
            }
    }//GEN-LAST:event_designationuActionPerformed

    private void designationuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_designationuMouseClicked
            
    }//GEN-LAST:event_designationuMouseClicked

    private void NameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_NameKeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_jButton4ActionPerformed

    private void designationuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_designationuMousePressed
        
    }//GEN-LAST:event_designationuMousePressed

    private void designationuMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_designationuMouseReleased
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_designationuMouseReleased

    private void departmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_departmentMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_departmentMouseClicked

    private void departmentMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_departmentMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_departmentMousePressed

    private void departmentMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_departmentMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_departmentMouseReleased

    private void departmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departmentActionPerformed

    private void designationuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_designationuMouseExited
        // TODO add your handling code here:
        lbl_designation.setText("");
    }//GEN-LAST:event_designationuMouseExited

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        if(designationu.getSelectedItem().equals("STUDENT"))
     {
         try{
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root","");
            Statement stmt = con.createStatement();
            String sql ="SELECT * FROM `studentdata` WHERE `username`='"+ Username.getText()+"'";
            ResultSet rst = stmt.executeQuery(sql);
            if(rst.next())
            {
               availability.setText("Sorry Not Available");
               Username.setText("");
               availability.setForeground(Color.red);
               
               
               
               
            }
            else
            {
                availability.setText("Available");
                availability.setForeground(Color.green);
                
                
            }
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
     }
     else if(designationu.getSelectedItem().equals("SELECT YOUR DESIGNATION")){
         lbl_designation.setText("Please Select Your Designation");
         lbl_designation.setForeground(Color.red);
     }
     else if(designationu.getSelectedItem().equals("=================================")){
         lbl_designation.setText("Please Select Your Designation");
         lbl_designation.setForeground(Color.red);
     }
     else{
        try{
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root","");
            Statement stmt = con.createStatement();
            String sql ="SELECT * FROM `logindatabase` WHERE `username`='"+ Username.getText()+"'";
            ResultSet rs = stmt.executeQuery(sql);
            if(rs.next())
            {
               availability.setText("Sorry Not Available");
               Username.setText("");
               availability.setForeground(Color.red);
              
               
               
               
            }
            else
            {
                availability.setText("Available");
                availability.setForeground(Color.green);
                
                
            }
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
     }
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseExited
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton3MouseExited

    private void Name56KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Name56KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_Name56KeyReleased

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if(designationu.getSelectedItem().equals("STUDENT"))
        {
            autoID();
        }
        else
        {
            try {
                lll();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(new1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(new1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        
    }//GEN-LAST:event_jButton5ActionPerformed
String d=null;
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
         try{
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.IMAGE","jpg",".png");
        chooser.addChoosableFileFilter(filter);
        int result = chooser.showSaveDialog(null);
        if(result == JFileChooser.APPROVE_OPTION)
        {
            File selectfile = chooser.getSelectedFile();
            String path = selectfile.getAbsolutePath();
            ghb.setIcon(ResizeImage(path));
            d = path;
           
            
        }
        else if(result == JFileChooser.CANCEL_OPTION)
        {
            JOptionPane.showMessageDialog(null,"No Data");
        }
    }catch(Exception e)
            {
            
            }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(new1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(new1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(new1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(new1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new new1().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(new1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    
      
    private Icon ResizeImage(String iml) {
        ImageIcon MyImage = new ImageIcon(iml);
        Image img = MyImage.getImage();
        Image newImage = img.getScaledInstance(ghb.getWidth(), ghb.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImage);
        return image;
        
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField Name;
    public javax.swing.JTextField Name56;
    private javax.swing.JTextField Username;
    private javax.swing.JLabel availability;
    private javax.swing.JPasswordField cpassword;
    public javax.swing.JComboBox<String> department;
    public javax.swing.JComboBox<String> designationu;
    public com.toedter.calendar.JDateChooser dob;
    public javax.swing.JLabel ghb;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lbl_designation;
    private javax.swing.JLabel lbl_password;
    private javax.swing.JLabel lbl_username;
    private javax.swing.JPasswordField password;
    // End of variables declaration//GEN-END:variables
}
